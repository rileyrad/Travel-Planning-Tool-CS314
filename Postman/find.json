{
	"info": {
		"_postman_id": "ce6c5b2f-843d-4698-a484-9542782557f3",
		"name": "find",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_uid": "25883428-ce6c5b2f-843d-4698-a484-9542782557f3"
	},
	"item": [
		{
			"name": "base",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c6027cf8-3708-431d-9478-975efff7d5c7",
						"exec": [
							"pm.test(\"Response is HTTP200 status\", () => {",
							"    pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "8a9f4886-8811-42dd-abd2-a3b8cce0f3b2",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"requestType\": \"find\",\n    \"match\": \"denver\",\n    \"limit\": 1\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}/api/find",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"find"
					]
				}
			},
			"response": []
		},
		{
			"name": "bodorol: Find Mataveri",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response is HTTP200 status\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"\r",
							"pm.test(\"requestType is 'find'\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.requestType).to.equal(\"find\");\r",
							"});\r",
							"\r",
							"pm.test(\"places test\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.places).to.not.equal(null);\r",
							"    pm.expect(jsonData.places.length).to.equal(1);\r",
							"});\r",
							"\r",
							"pm.test(\"found test\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.found).to.equal(1);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"requestType\": \"find\",\n    \"match\": \"mataveri\",\n    \"limit\": 10\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}/api/find",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"find"
					]
				}
			},
			"response": []
		},
		{
			"name": "bodorol: Find Random",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response is HTTP200 status\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"\r",
							"pm.test(\"requestType is 'find'\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.requestType).to.equal(\"find\");\r",
							"});\r",
							"\r",
							"pm.test(\"places test\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.places).to.not.equal(null);\r",
							"    pm.expect(jsonData.places.length).to.equal(100);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"requestType\": \"find\",\n    \"match\": \"\",\n    \"limit\": 0\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}/api/find",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"find"
					]
				}
			},
			"response": []
		},
		{
			"name": "bodorol: Find Denver",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response is HTTP200 status\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"\r",
							"pm.test(\"requestType is 'find'\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.requestType).to.equal(\"find\");\r",
							"});\r",
							"\r",
							"pm.test(\"places test\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.places).to.not.equal(null);\r",
							"    pm.expect(jsonData.places.length).to.equal(5);\r",
							"});\r",
							"pm.test(\"found test\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.found).to.equal(30);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"requestType\": \"find\",\n    \"match\": \"denver\",\n    \"limit\": 5\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}/api/find",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"find"
					]
				}
			},
			"response": []
		}
	]
}